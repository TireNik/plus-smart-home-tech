services:
  postgres:
    image: postgres:15
    container_name: analyzer_postgres
    environment:
      POSTGRES_DB: analyzer
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "6432:5432"
    volumes:
      - analyzer-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d analyzer"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- shopping-cart BD ---
  shopping-cart-postgres:
    image: postgres:15
    container_name: shopping_cart_postgres
    environment:
      POSTGRES_DB: shopping_cart
      POSTGRES_USER: shopping
      POSTGRES_PASSWORD: shopping123
    ports:
      - "5434:5432"
    volumes:
      - shopping-cart-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shopping -d shopping_cart"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- shopping-store BD ---
  shopping-store-postgres:
    image: postgres:15
    container_name: shopping_store_postgres
    environment:
      POSTGRES_DB: shopping_store
      POSTGRES_USER: store
      POSTGRES_PASSWORD: store123
    ports:
      - "5435:5432"
    volumes:
      - shopping-store-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U store -d shopping_store"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- warehouse BD ---
  warehouse-postgres:
    image: postgres:15
    container_name: warehouse_postgres
    environment:
      POSTGRES_DB: warehouse
      POSTGRES_USER: warehouse
      POSTGRES_PASSWORD: warehouse123
    ports:
      - "5436:5432"
    volumes:
      - warehouse-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U warehouse -d warehouse"]
      interval: 10s
      timeout: 5s
      retries: 5

  delivery-db:
    image: postgres:16.1
    container_name: delivery-db
    ports:
      - "6551:5432"
    environment:
      POSTGRES_DB: delivery
      POSTGRES_USER: delivery
      POSTGRES_PASSWORD: delivery

  payment-db:
    image: postgres:16.1
    container_name: payment-db
    ports:
      - "6550:5432"
    environment:
      POSTGRES_DB: payment
      POSTGRES_USER: payment
      POSTGRES_PASSWORD: payment

  order-db:
    image: postgres:16.1
    container_name: order-db
    ports:
      - "6549:5432"
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: order
      POSTGRES_PASSWORD: order

  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic telemetry.sensors.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.snapshots.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.hubs.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

volumes:
  analyzer-postgres-data:
  commerce-postgres-data:
  shopping-cart-postgres-data:
  shopping-store-postgres-data:
  warehouse-postgres-data: